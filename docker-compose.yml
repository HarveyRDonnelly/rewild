networks:
  api:

services:
  db:
    image: postgres
    restart: always
    user: ${DB_USER}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 1s
      timeout: 5s
      retries: 10
    volumes:
      - ./db/create_schema.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    networks:
      - api
  rewild_api:
    build:
      context: .
      dockerfile: Dockerfile.multistage
    container_name: rewild_api
    environment:
      SERVER_ENV: ${SERVER_ENV}
      DB_USER: ${DB_USER}
      DB_NAME: ${DB_NAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_PORT: ${DB_PORT}
      DB_HOST: ${DB_HOST}
      PROJECT_PATH: ${PROJECT_PATH}
      FIREBASE_OPTS_NAME: ${FIREBASE_OPTS_NAME}
    networks:
      - api
    ports:
      - 8080:8080
    volumes:
      - ./res:/rewild/res
      - ./config:/rewild/config